version: '3'

networks:
  laravel:

services:
  site:
    build:
      context: .
      dockerfile: httpd.dockerfile
    container_name: httpd
    ports:
      - "8080:80"
    volumes:
      - ./site:/var/www/html
    depends_on:
      - php
      - phpmyadmin
      - mysql
      - legacy
    networks:
      - laravel

  legacy:
    build: legacy/Docker/php
    ports:
      - "8082:80"
    volumes:
      - ./legacy/public:/var/www/html
      - ./site/storage/app/public/images:/var/www/html/data/images
      - ./site/storage/app/public/zips:/var/www/html/data/zips
    depends_on:
      - legacy-composer
      - legacy-npm
    networks:
      - laravel

  legacy-composer:
    build: legacy/Docker/php
    volumes:
      - ./legacy/public/php:/php
    command: bash -c "composer install -d /php"

  legacy-npm:
    build: legacy/Docker/php
    volumes:
      - ./legacy/:/app
    working_dir: /app
    command: bash -c "npm install; npm rebuild node-sass; npm run grunt; npm run grunt -- watch"

  mysql:
    image: mysql:5.7.29
    container_name: mysql
    tty: true
    ports:
      - "3306:3306"
    volumes:
      - ./mysqld.cnf:/etc/mysql/conf.d/sql-mode.cnf
    environment:
      MYSQL_DATABASE: atarilegend
      MYSQL_USER: atarilegend
      MYSQL_PASSWORD: atarilegend
      MYSQL_ROOT_PASSWORD: atarilegend
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./site:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      UPLOAD_LIMIT: 8M
      PMA_HOST: mysql
    networks:
      - laravel
    ports:
      - 8081:80

  composer:
    build:
      context: .
      dockerfile: php.dockerfile
    entrypoint: ['/usr/bin/composer']
    container_name: composer
    volumes:
      - ./site:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel

  npm:
    image: node:19
    container_name: npm
    volumes:
      - ./site:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./site:/var/www/html
      # - /path/to/stonish/:/stonish
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
